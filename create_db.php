<?php
// Código de conexão do php com o banco de dados sqlite via PDO
$pdo = new PDO('sqlite:./banco.db');

// Criação da tabela de entidades
// A tabela de entidades armazena informações sobre clientes, fornecedores e logística
$pdo->exec('CREATE TABLE IF NOT EXISTS ENTIDADES (
    ID_ENTIDADE INTEGER PRIMARY KEY AUTOINCREMENT,
    NOME TEXT NOT NULL,
    RAZAO_SOCIAL TEXT,
    TELEFONE TEXT NOT NULL,
    TELEFONE_2 TEXT,
    EMAIL TEXT NOT NULL,
    CPF INTEGER,
    CNPJ INTEGER,
    ENDERECO_RUA TEXT,
    ENDERECO_NUMERO TEXT,
    ENDERECO_COMPLEMENTO TEXT,
    ENDERECO_REFERENCIA TEXT,
    ENDERECO_CEP TEXT,
    ENDERECO_BAIRRO TEXT,
    ENDERECO_CIDADE TEXT,
    ENDERECO_UF TEXT,
    ENDERECO_PAIS TEXT,
    TIPO_ENTIDADE TEXT NOT NULL,
    CATEGORIA_ENTIDADE TEXT NOT NULL,
    DATA_CADASTRO DATE NOT NULL,
    DATA_ATUALIZACAO DATE NOT NULL,
    OBSERVACAO TEXT
    )'
);

// Criação da tabela de contatos
// A tabela de contatos armazena informações sobre os contatos dentro de cada entidade
// Cada contato está vinculado a uma entidade através do ID_ENTIDADE
$pdo->exec('CREATE TABLE IF NOT EXISTS CONTATOS (
    ID_CONTATO INTEGER PRIMARY KEY AUTOINCREMENT,
    NOME TEXT NOT NULL,
    TELEFONE TEXT NOT NULL,
    TELEFONE_2 TEXT,
    EMAIL TEXT NOT NULL,
    CARGO TEXT NOT NULL,
    STATUS_CONTATO TEXT NOT NULL,
    DATA_CADASTRO DATE NOT NULL,
    DATA_ATUALIZACAO DATE NOT NULL,
    OBSERVACAO TEXT,
    ID_ENTIDADE INTEGER NOT NULL,
    FOREIGN KEY (ID_ENTIDADE) REFERENCES ENTIDADES(ID_ENTIDADE)
    )'
);

// Criação da tabela de produtos
// A tabela de produtos armazena informações sobre os produtos disponíveis
// Cada produto está vinculado a uma entidade(fornecedor) através do ID_ENTIDADE
$pdo->exec('CREATE TABLE IF NOT EXISTS PRODUTOS (
    ID_PRODUTO INTEGER PRIMARY KEY AUTOINCREMENT,
    SKU TEXT NOT NULL,
    NOME TEXT NOT NULL,
    MARCA TEXT NOT NULL,
    MODELO TEXT NOT NULL,
    ESTOQUE INTEGER NOT NULL,
    UNIDADE_MEDIDA TEXT NOT NULL,
    CATEGORIA TEXT NOT NULL,
    SUBCATEGORIA TEXT NOT NULL,
    FINALIDADE TEXT NOT NULL,
    VALOR_COMPRA REAL NOT NULL,
    VALOR_CUSTO REAL NOT NULL,
    VALOR_VENDA_LOCAL REAL NOT NULL,
    VALOR_VENDA_SITE REAL NOT NULL,
    VALOR_VENDA_ML_CLASSICO REAL NOT NULL,
    VALOR_VENDA_ML_PREMIUM REAL NOT NULL,
    VALOR_VENDA_SHOPEE REAL NOT NULL,
    VALOR_VENDA_MAGALU REAL NOT NULL,
    VALOR_VENDA_AMERICANAS REAL NOT NULL,
    VALOR_VENDA_AMAZON REAL NOT NULL,
    VALOR_VENDA_ELO7 REAL NOT NULL,
    DATA_CADASTRO DATE NOT NULL,
    DATA_ATUALIZACAO DATE NOT NULL,
    OBSERVACAO TEXT,
    ID_ENTIDADE INTEGER NOT NULL, /* Fornecedor do produto */
    FOREIGN KEY (ID_ENTIDADE) REFERENCES ENTIDADES(ID_ENTIDADE)
    )'
);

// Criação da tabela de transações (compra e venda)
// A tabela de transações armazena informações sobre as transações (realizadas ou não, como canceladas, desistências, etc)
$pdo->exec('CREATE TABLE IF NOT EXISTS TRANSACOES (
    ID_TRANSACAO INTEGER PRIMARY KEY AUTOINCREMENT,
    TIPO_TRANSACAO TEXT NOT NULL,
    FORMA_PAGAMENTO TEXT NOT NULL,
    QTD_PARCELAS INTEGER,
    STATUS_TRANSACAO TEXT NOT NULL,
    VALOR_PRODUTOS REAL NOT NULL,
    FORMA_ENTREGA TEXT NOT NULL,
    VALOR_ENTREGA REAL NOT NULL,
    VALOR_TOTAL REAL NOT NULL,
    DATA_TRANSACAO DATE NOT NULL,
    DATA_PAGAMENTO DATE,
    OBSERVACAO TEXT,
    ID_ENTIDADE INTEGER NOT NULL, /* Logística utilizada */
    FOREIGN KEY (ID_ENTIDADE) REFERENCES ENTIDADES(ID_ENTIDADE)
    )'
);

// Criação da tabela de transações de produtos
// A tabela de transações de produtos armazena informações sobre os produtos envolvidos em cada transação
$pdo->exec('CREATE TABLE IF NOT EXISTS ITEM_TRANSACAO (
    ID_PRODUTO INTEGER NOT NULL,
    ID_TRANSACAO INTEGER NOT NULL,
    QUANTIDADE INTEGER NOT NULL,
    UNIDADE_MEDIDA TEXT NOT NULL,
    VALOR_UNITARIO REAL NOT NULL,
    DESCONTO REAL NOT NULL,
    SUBTOTAL REAL NOT NULL,
    OBSERVACAO TEXT,
    PRIMARY KEY (ID_PRODUTO, ID_TRANSACAO), /* Chave primária composta por ID_PRODUTO e ID_TRANSACAO */
    FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTOS(ID_PRODUTO),
    FOREIGN KEY (ID_TRANSACAO) REFERENCES TRANSACOES(ID_TRANSACAO)
    )'
);

// Criação da tabela de fluxo de caixa
// A tabela de fluxo de caixa armazena informações sobre as entradas e saídas de dinheiro
$pdo->exec('CREATE TABLE IF NOT EXISTS REGISTRO_CAIXA (
    ID_REGISTRO INTEGER PRIMARY KEY AUTOINCREMENT,
    TIPO_REGISTRO TEXT NOT NULL,
    DESCRICAO TEXT NOT NULL,
    VALOR REAL NOT NULL,
    DATA_REGISTRO DATE NOT NULL,
    FORMA_PAGAMENTO TEXT NOT NULL,
    STATUS_REGISTRO TEXT NOT NULL,
    OBSERVACAO TEXT,
    ID_ENTIDADE INTEGER NOT NULL, /* Entidade relacionada ao registro */
    FOREIGN KEY (ID_ENTIDADE) REFERENCES ENTIDADES(ID_ENTIDADE)
    )'
);
